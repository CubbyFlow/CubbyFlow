name: Ubuntu

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build-ubuntu:
    strategy:
      matrix:
        include:
          # Ubuntu 16.04 + gcc-7
          - name: "Ubuntu 16.04 + gcc-7"
            os: ubuntu-16.04
            compiler: gcc
            version: "7"
          # Ubuntu 18.04 + gcc-8
          - name: "Ubuntu 18.04 + gcc-8"
            os: ubuntu-18.04
            compiler: gcc
            version: "8"
          # Ubuntu 20.04 + gcc-9
          - name: "Ubuntu 20.04 + gcc-9"
            os: ubuntu-20.04
            compiler: gcc
            version: "9"
          # Ubuntu 16.04 + clang-8
          - name: "Ubuntu 16.04 + clang-8"
            os: ubuntu-16.04
            compiler: clang
            version: "8"
          # Ubuntu 18.04 + clang-9
          - name: "Ubuntu 18.04 + clang-9"
            os: ubuntu-18.04
            compiler: clang
            version: "9"
          # Ubuntu 20.04 + clang-10
          - name: "Ubuntu 20.04 + clang-10"
            os: ubuntu-20.04
            compiler: clang
            version: "10"

    runs-on: ${{ matrix.os }}
    name: ${{ matrix.name }}

    steps:
    - uses: actions/checkout@v1
      with:
        submodules: true
    - name: Install packages
      run: sudo apt-get install -yq python3-setuptools
    - name: Configure Compiler
      run: |
        if [ "${{ matrix.compiler }}" = "gcc" ]; then
          echo "::set-env name=CC::gcc-${{ matrix.version }}"
          echo "::set-env name=CXX::g++-${{ matrix.version }}"
        else
          echo "::set-env name=CC::clang-${{ matrix.version }}"
          echo "::set-env name=CXX::clang++-${{ matrix.version }}"
        fi
    - name: Configure Build
      run: mkdir build && cd build && cmake -DCMAKE_BUILD_TYPE=Release ..
    - name: Build
      run: cd build && make
    - name: Run Unit Test
      run: /home/runner/work/CubbyFlow/CubbyFlow/build/bin/UnitTests
    - name: Run Python Test
      run: |
        pip3 install -r requirements.txt
        pip3 install .
        python3 -m pytest Tests/PythonTests/